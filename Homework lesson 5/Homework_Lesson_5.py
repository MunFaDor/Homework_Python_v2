
#chapter----------------Homework Lesson №5 -------------------

#subchap Задача №1

#devider - Да се състави програма, чрез която се въвежда 4-цифренo естествено число от интервала [1000.. 9999]. От това число се формират 2 нови 2-цифрени числа. Първото число се формира от 1-та и 4-та цифра на въведеното число. Второто число се формира от 2-рa - 3-та цифра на въведеното число. На екрана да се изведе дали 1-то ново число e по-малко <, равно = или по-голямо от 2-то число.

print('Задача №1')
print('\n')
while True:
    try:
        #explain Въвеждане на 4-цифрено число
        num = int(input("Въведете 4-цифрено число от интервала [1000..9999]: "))
        
        #explain Проверка за валидност на числото
        if 1000 <= num <= 9999:
            #explain Извличане на цифрите
            thousands = num // 1000
            hundreds = (num // 100) % 10
            tens = (num // 10) % 10
            units = num % 10
            
            #explain Формиране на новите числа
            new_number1 = thousands * 10 + units
            new_number2 = hundreds * 10 + tens
            
            #explain Сравнение на новите числа
            if new_number1 < new_number2:
                print(f"Числото: {new_number1} е по-малко от числото: {new_number2}({new_number1}<{new_number2})")
            elif new_number1 > new_number2:
                print(f"Числото: {new_number1} е по-голямо от числото: {new_number2}({new_number1}>{new_number2})")
            else:
                print(f"Числото: {new_number1} е равно на числото: {new_number2}({new_number1}={new_number2})")
            
            break  #explain Излизаме от цикъла при успешно изпълнение
        else:
            print("Грешка! Въведете валидно 4-цифрено число.")
    except ValueError:
        print("Грешка! Въведете числова стойност.")


print('\n')

print('*'*30)

#subchap Задача №2

print('\n')
print('Задача №2')
print('\n')
#devider Да се състави програма, чрез която се въвеждат 2 естествени двуцифрени числа a,b. Програмата да изведе съобщение дали последната цифра от произведението на двете числа е четна, както и самата цифра. Входни данни: a,b - естествени числа от интервала [10..99]. Използвайте проверка на логическо условие - оператор if. Пример: 15, 25 Изход: 375, 5 нечетна

while True:
    try:
        #explain Въвеждане на първото число
        a = int(input("Въведете първо число (от 10 до 99): "))
        
        #explain Проверка за валидност на числото
        if 10 <= a <= 99:
            #explain Въвеждане на второто число
            b = int(input("Въведете второ число (от 10 до 99): "))
            
            #explain Проверка за валидност на второто число
            if 10 <= b <= 99:
                # Произведение на числата
                product = a * b
                
                #explain Последна цифра на произведението
                last_digit = product % 10
                
                #explain Проверка дали последната цифра е четна
                if last_digit % 2 == 0:
                    even_or_odd = "четна"
                else:
                    even_or_odd = "нечетна"
                
                #explain Извеждане на резултата
                print('\n')
                print(f"Произведението на {a} и {b} е {product}, последната цифра ({last_digit}) е {even_or_odd}.")
                
                break  #explain Излизаме от цикъла при успешно изпълнение
            else:
                print("Грешка! Въведете валидно второ число.")
        else:
            print("Грешка! Въведете валидно първо число.")
    except ValueError:
        print("Грешка! Въведете числова стойност.")

print('\n')

print('*'*30)

#subchap Задача №3

#devider . Трябва да се напълни цистерна с вода. Имате 2 кофи с вместимост 2 и 3 литра и ги ползвате едновременно. Да се състави програма, която по въведен обем извежда как ще прелеете течността с тези кофи, т.е. по-колко пъти ще се пълни всяка от кофите. Входни данни: естествено число от интервала [10..9999]. Използвайте проверка на логическо условие - оператор if. Пример: 107 Изход: 21 пъти 2-те кофи, допълнително кофа от 2 литра


print('\n')
print('Задача №3', "Въпрос по кода защото не ми се получва.")
print('\n')

print('*'*30)

#subchap Задача №4

print('\n')
print('Задача №4')
print('\n')
#devider - Съставете програма, която по въведено трицифренo число проверява дали числото се дели на всяка своя цифра. Във въведеното число да няма цифра 0. Използвайте проверка на логическо условие - оператор if. Пример: 121 Изход: 1:2:4 дели се.

try:
    #explain Въвеждане на трицифрено число
    num = input("Въведете трицифрено число без цифра 0: ")
    
    #explain Проверка дали въведеното число е валидно
    if len(num) == 3 and num.isnumeric() and '0' not in num:
        num = int(num)
        hundreds = num // 100  #info Първата цифра
        tens = (num // 10) % 10  #info Втората цифра
        units = num % 10  #info Третата цифра
        
        #explain Проверка дали числото се дели на всяка своя цифра
        if num % hundreds == 0 and num % tens == 0 and num % units == 0:
            print(f"{hundreds}:{tens}:{units} дели се")
        else:
            print(f"{hundreds}:{tens}:{units} не се дели")
    else:
        print("Грешка! Въведете валидно трицифрено число без цифра 0.")
except ValueError:
    print("Грешка! Въведете числова стойност.")

print('\n')

print('*'*30)

#subchap Задача №5

print('\n')
print('Задача №5')
print('\n')

#devider - Да се състави програма, която да изчислява периметър и площ на правоъгълник по въведени дължини на прилежащи страни - естествени числа от интервала [5 ..100]. Изведете съобщение, ако страните формират квадрат. Използвайте проверка на логическо условие - оператор if. Пример: 4,4 Изход: квадрат лице 16, периметър 16

try:
    #explain Въвеждане на дължини на прилежащи страни на правоъгълник
    side1 = int(input("Въведете дължина на първата страна (от 5 до 100): "))
    side2 = int(input("Въведете дължина на втората страна (от 5 до 100): "))
    
    #explain Проверка за валидност на въведените страни
    if 5 <= side1 <= 100 and 5 <= side2 <= 100:
        perimeter = 2 * (side1 + side2)  # Изчисляване на периметъра
        area = side1 * side2  # Изчисляване на лицето
        
        #explain Проверка дали страните формират квадрат
        if side1 == side2:
            print(f"Страните формират квадрат. Лице: {area}, периметър: {perimeter}")
        else:
            print(f"Лице: {area}, периметър: {perimeter}")
    else:
        print("Грешка! Въведете валидни дължини на страните.")
except ValueError:
    print("Грешка! Въведете числови стойности.")
    
    print('\n')

print('*'*30)

#subchap Задача №6

print('\n')
print('Задача №6')
print('\n')

#devider Преди доста години имаше услуга - изпращане на луксозна телеграма. Поводи най-различни: рожден, имен ден, сватба и т.н. Цената се формираше по следния начин А: цена за бланка, B: цена за текст до 20 думи, C: цена за всяка дума, след първите 20 думи. Стойностите на A, B, C са реални числа от интервала [0.02..0.89]. Да се състави програма, чрез която по въведени брой думи, стойности за A, B, брой думи, C се изчислява крайна цена на луксозна телеграма. Пример: A=0.2, B=0.5, 45 думи, C=0.05 Изход: 1.95


try:
    #explain Въвеждане на стойности за A, B и C
    A = float(input("Въведете стойността на A (от 0.02 до 0.89): "))
    B = float(input("Въведете стойността на B (от 0.02 до 0.89): "))
    C = float(input("Въведете стойността на C (от 0.02 до 0.89): "))
    
    #explain Проверка за валидност на стойностите на A, B и C
    if 0.02 <= A <= 0.89 and 0.02 <= B <= 0.89 and 0.02 <= C <= 0.89:
        #explain Въвеждане на брой думи
        num_words = int(input("Въведете броя на думите: "))
        
        #explain Изчисляване на цената на луксозната телеграма
        if num_words <= 20:
            total_price = A + B
        else:
            additional_words = num_words - 20
            total_price = A + B + (additional_words * C)
        
        print(f"Крайната цена на луксозната телеграма е: {total_price:.2f}")
    else:
        print("Грешка! Въведете валидни стойности за A, B и C.")
except ValueError:
    print("Грешка! Въведете числови стойности.")
    

print('\n')

print('*'*30)

#subchap Задача №7

print('\n')
print('Задача №7')
print('\n')

#devider Високосни години са всички години кратни на 4 с изключения столетията, но без столетия кратни на 400, т.е. 1900 не е високосна, но 1600 и 2000 са високосни.Съставете програма, която по въведен ден, месец, година отпечатва следващата дата. Входни данни: естествени числа за ден, месец, година. Пример: 28, 2, 2000 Изход: 1,3,2000

def is_leap_year(year):
    if year % 4 == 0:
        if year % 100 == 0:
            if year % 400 == 0: 
#explain Функция, която проверява дали дадена година е високосна. Връща True ако е високосна, иначе връща False
                return True
            return False
        return True
    return False

try:
    #explain Въвеждане на ден, месец и година
    day = int(input("Въведете ден: "))
    month = int(input("Въведете месец: "))
    year = int(input("Въведете година: "))
    
    #explain Проверка за валидност на въведената дата
    if (1 <= day <= 31) and (1 <= month <= 12) and (year >= 1):
        days_in_month = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        
        if is_leap_year(year):
            days_in_month[2] = 29
        
        #explain Проверка дали денят не надвишава броя дни в месеца
        if day <= days_in_month[month]:
            #explain Проверка дали трябва да увеличите месеца или годината
            if day == days_in_month[month]:
                day = 1
                month += 1
                if month > 12:
                    month = 1
                    year += 1
            else:
                day += 1
            
            print(f"Следващата дата е: {day},{month},{year}")
        else:
            print("Грешка! Въведената дата не съществува.")
    else:
        print("Грешка! Въведете валидни стойности за ден, месец и година.")
except ValueError:
    print("Грешка! Въведете числови стойности.")

print('\n')

print('*'*30)

#subchap Задача №8

print('\n')
print('Задача №8')
print('\n')

#devider Да се състави програма, която да отгатне колко е студено/топло по въведената температура в градус Целзий. Температурните интервали са: t <=-20 ледено студено; t <=0 && t>-20 студено; t <=15 && t>0 хладно; t <=25 && t>15 топло; t >25 горещо Входни данни: t - цяло число от интервала [-100..100].Пример: 12 Изход: хладно

try:
    t = int(input("Въведете желаната температура за проверка:"))
    if -100<=t<=100:
        print("Извършва се проверка за посечената температура...")
    else:
        print('Моле въведете стойност в интервала [-100 -> 100]')
except ValueError:
    print('Моля въведете числова стойност в зададения интервал.')

if t<=-20:
    print(f"Избраната температура {t} е ледено студена") 
elif t<=0 and t>-20:
    print(f"Избраната температура {t} е студена") 
elif t>0 and t<=15:
    print(f"Избраната температура {t} е хладна")
elif t>15 and t<=25:
    print(f"Избраната температура {t} е топла")
elif t>25:
    print(f"Избраната температура {t} е гореща")

print('\n')

print('*'*30)

#subchap Задача №9

#devider Да се състави програма, която да провери дали е възможно един правоъгълник да се вмести изцяло в друг правоъгълник. Входни данни: X1, Y1, X2, Y2 - страните на 2-та правоъгълника - естествени числа от         интервала [5 ..100].                                                                                       Пример: 5, 12; 18,7 Изход: вместват се

print('\n')
print('Задача №9')
print('\n')

while True:
    try:
        X1=int(input("Enter a rectangle side A (X1) of the rectangle A:"))
        Y1=int(input("Enter a rectangle side B (Y1) of the rectangle A:"))
        X2=int(input("Enter a rectangle side A (X2) of the rectangle B:"))
        Y2=int(input("Enter a rectangle side B (Y2) of the rectangle B:"))
        if X1>=5 and X2>=5 and Y1>=5 and Y2>=5 and X1<=100 and X2<=100 and Y1<=100 and Y2<=100:
            X1=int(X1)
            X2=int(X2)
            Y1=int(Y1)
            Y2=int(Y2)
            break
        else:
            print("Please enter values for the rectangles: А and B ranging from 5cm to 100cm.")
    except ValueError:
        print("Please enter number!")
        
if X1==Y1:
    print("You have entered the values of a square for the rectangle A")
elif X2==Y2:
    print("You have entered the values of a square for the rectangle B")
else:
            if X1<=X2 and Y1<=Y2:
                print(f"The rectangle with side A {X1} and side B {X2} will fit in a rectangle with side A {Y1} and side B {Y2}")
            elif X2<=X1 and Y2<=Y1:
                print(f"The rectangle with side A {X2} and side B {X1} will fit in a rectangle with side A {Y2} and side B {Y1}")
            else:
                print(f"The rectangles will not fit.")

print('\n')

print('*'*30)